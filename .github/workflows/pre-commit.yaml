name: Pre-commit checks (black, isort, mypy, flake8, pytest)

on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

jobs:
  install-and-test:

    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.10"]

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v2

    - name: Cache conda
      uses: actions/cache@v2
      env:
        # Increase this value to reset cache if etc/example-environment.yml has not changed
        CACHE_NUMBER: 0
      with:
        path: ~/conda_pkgs_dir
        key:
          ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('conda/python-project-template.yaml') }}

    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        auto-activate-base: false
        activate-environment: python-project-template
        environment-file: conda/python-project-template.yaml
        use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!

    - name: Install and configure Poetry
      uses: snok/install-poetry@v1

    - name: Using conda and poetry, install the package
      run: |
        poetry install
        poetry --version

    - name: Check installed packages (both conda and poetry/pip)
      run: |
        poetry env info
        conda list
        pip list

    - name: Install pre-commit
      run: |
        poetry run pre-commit install

    - name: Run all pre-commit tests
      run: |
        poetry run pre-commit run --all-files
